/*
 * Generated by dtrace(8).
 */

#ifndef	_TRACEPCP_H
#define	_TRACEPCP_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#if _DTRACE_VERSION

#define	TRACEPCP_QUERY_CHECKSOLUTION(arg0) \
	__dtrace_tracepcp___query__checksolution(arg0)
#ifndef	__sparc
#define	TRACEPCP_QUERY_CHECKSOLUTION_ENABLED() \
	__dtraceenabled_tracepcp___query__checksolution()
#else
#define	TRACEPCP_QUERY_CHECKSOLUTION_ENABLED() \
	__dtraceenabled_tracepcp___query__checksolution(0)
#endif
#define	TRACEPCP_QUERY_COMPUTEMULTIPLICATIONTIME(arg0) \
	__dtrace_tracepcp___query__computemultiplicationtime(arg0)
#ifndef	__sparc
#define	TRACEPCP_QUERY_COMPUTEMULTIPLICATIONTIME_ENABLED() \
	__dtraceenabled_tracepcp___query__computemultiplicationtime()
#else
#define	TRACEPCP_QUERY_COMPUTEMULTIPLICATIONTIME_ENABLED() \
	__dtraceenabled_tracepcp___query__computemultiplicationtime(0)
#endif
#define	TRACEPCP_QUERY_COUNTNONZEROS(arg0) \
	__dtrace_tracepcp___query__countnonzeros(arg0)
#ifndef	__sparc
#define	TRACEPCP_QUERY_COUNTNONZEROS_ENABLED() \
	__dtraceenabled_tracepcp___query__countnonzeros()
#else
#define	TRACEPCP_QUERY_COUNTNONZEROS_ENABLED() \
	__dtraceenabled_tracepcp___query__countnonzeros(0)
#endif
#define	TRACEPCP_QUERY_MULTIPLICATION(arg0, arg1, arg2) \
	__dtrace_tracepcp___query__multiplication(arg0, arg1, arg2)
#ifndef	__sparc
#define	TRACEPCP_QUERY_MULTIPLICATION_ENABLED() \
	__dtraceenabled_tracepcp___query__multiplication()
#else
#define	TRACEPCP_QUERY_MULTIPLICATION_ENABLED() \
	__dtraceenabled_tracepcp___query__multiplication(0)
#endif


extern void __dtrace_tracepcp___query__checksolution(int);
#ifndef	__sparc
extern int __dtraceenabled_tracepcp___query__checksolution(void);
#else
extern int __dtraceenabled_tracepcp___query__checksolution(long);
#endif
extern void __dtrace_tracepcp___query__computemultiplicationtime(double);
#ifndef	__sparc
extern int __dtraceenabled_tracepcp___query__computemultiplicationtime(void);
#else
extern int __dtraceenabled_tracepcp___query__computemultiplicationtime(long);
#endif
extern void __dtrace_tracepcp___query__countnonzeros(int);
#ifndef	__sparc
extern int __dtraceenabled_tracepcp___query__countnonzeros(void);
#else
extern int __dtraceenabled_tracepcp___query__countnonzeros(long);
#endif
extern void __dtrace_tracepcp___query__multiplication(int, int, int);
#ifndef	__sparc
extern int __dtraceenabled_tracepcp___query__multiplication(void);
#else
extern int __dtraceenabled_tracepcp___query__multiplication(long);
#endif

#else

#define	TRACEPCP_QUERY_CHECKSOLUTION(arg0)
#define	TRACEPCP_QUERY_CHECKSOLUTION_ENABLED() (0)
#define	TRACEPCP_QUERY_COMPUTEMULTIPLICATIONTIME(arg0)
#define	TRACEPCP_QUERY_COMPUTEMULTIPLICATIONTIME_ENABLED() (0)
#define	TRACEPCP_QUERY_COUNTNONZEROS(arg0)
#define	TRACEPCP_QUERY_COUNTNONZEROS_ENABLED() (0)
#define	TRACEPCP_QUERY_MULTIPLICATION(arg0, arg1, arg2)
#define	TRACEPCP_QUERY_MULTIPLICATION_ENABLED() (0)

#endif


#ifdef	__cplusplus
}
#endif

#endif	/* _TRACEPCP_H */
